{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\feung\\\\Downloads\\\\heartbeat-monitor\\\\src\\\\components\\\\BackgroundMusic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport './BackgroundMusic.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundMusic = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n  useEffect(() => {\n    // Create YouTube iframe when component mounts\n    const loadYouTubePlayer = () => {\n      if (window.YT) {\n        new window.YT.Player('youtube-player', {\n          height: '0',\n          width: '0',\n          videoId: '1QkX7Qetu2Q',\n          playerVars: {\n            autoplay: 0,\n            controls: 0,\n            disablekb: 1,\n            enablejsapi: 1,\n            fs: 0,\n            iv_load_policy: 3,\n            modestbranding: 1,\n            rel: 0,\n            start: 175,\n            // Start at 2:55 (175 seconds)\n            end: 230,\n            // End at 3:50\n            loop: 2,\n            playlist: '1QkX7Qetu2Q'\n          },\n          events: {\n            onReady: event => {\n              event.target.setVolume(volume * 100);\n              if (isPlaying) {\n                event.target.playVideo();\n              }\n            },\n            onStateChange: event => {\n              if (event.data === window.YT.PlayerState.ENDED) {\n                event.target.seekTo(175); // Restart from 2:55\n                event.target.playVideo();\n              }\n            }\n          }\n        });\n      }\n    };\n\n    // Load YouTube API\n    if (!window.YT) {\n      const tag = document.createElement('script');\n      tag.src = 'https://youtu.be/1QkX7Qetu2Q?si=fJDiZ6d_OnhUTs4o';\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n      window.onYouTubeIframeAPIReady = loadYouTubePlayer;\n    } else {\n      loadYouTubePlayer();\n    }\n  }, [isPlaying, volume]);\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n    // This will be handled by the YouTube player events\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    // Volume change will be handled by the YouTube player\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-music\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"youtube-player\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"music-controls\",\n      initial: {\n        opacity: 0,\n        x: 50\n      },\n      animate: {\n        opacity: 1,\n        x: 0\n      },\n      transition: {\n        duration: 0.5,\n        delay: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(motion.button, {\n        className: `music-toggle ${isPlaying ? 'playing' : ''}`,\n        onClick: togglePlay,\n        whileHover: {\n          scale: 1.1\n        },\n        whileTap: {\n          scale: 0.9\n        },\n        children: isPlaying ? 'ðŸŽµ' : 'ðŸ”‡'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"volume-icon\",\n          children: \"\\uD83D\\uDD0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.1\",\n          value: volume,\n          onChange: handleVolumeChange,\n          className: \"volume-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"music-title\",\n          children: \"I LOVE NOT A CHATAHI \\uD81B\\uDE6D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(BackgroundMusic, \"ZhAlWmXuRS9OOmvBPj3haooBzbU=\");\n_c = BackgroundMusic;\nexport default BackgroundMusic;\nvar _c;\n$RefreshReg$(_c, \"BackgroundMusic\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","BackgroundMusic","_s","isPlaying","setIsPlaying","volume","setVolume","loadYouTubePlayer","window","YT","Player","height","width","videoId","playerVars","autoplay","controls","disablekb","enablejsapi","fs","iv_load_policy","modestbranding","rel","start","end","loop","playlist","events","onReady","event","target","playVideo","onStateChange","data","PlayerState","ENDED","seekTo","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","togglePlay","handleVolumeChange","e","newVolume","parseFloat","value","className","children","id","style","display","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","x","animate","transition","duration","delay","button","onClick","whileHover","scale","whileTap","type","min","max","step","onChange","_c","$RefreshReg$"],"sources":["C:/Users/feung/Downloads/heartbeat-monitor/src/components/BackgroundMusic.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport './BackgroundMusic.css';\r\n\r\nconst BackgroundMusic = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(0.5);\r\n\r\n  useEffect(() => {\r\n    // Create YouTube iframe when component mounts\r\n    const loadYouTubePlayer = () => {\r\n      if (window.YT) {\r\n        new window.YT.Player('youtube-player', {\r\n          height: '0',\r\n          width: '0',\r\n          videoId: '1QkX7Qetu2Q',\r\n          playerVars: {\r\n            autoplay: 0,\r\n            controls: 0,\r\n            disablekb: 1,\r\n            enablejsapi: 1,\r\n            fs: 0,\r\n            iv_load_policy: 3,\r\n            modestbranding: 1,\r\n            rel: 0,\r\n            start: 175, // Start at 2:55 (175 seconds)\r\n            end: 230,   // End at 3:50\r\n            loop: 2,\r\n            playlist: '1QkX7Qetu2Q'\r\n          },\r\n          events: {\r\n            onReady: (event) => {\r\n              event.target.setVolume(volume * 100);\r\n              if (isPlaying) {\r\n                event.target.playVideo();\r\n              }\r\n            },\r\n            onStateChange: (event) => {\r\n              if (event.data === window.YT.PlayerState.ENDED) {\r\n                event.target.seekTo(175); // Restart from 2:55\r\n                event.target.playVideo();\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    // Load YouTube API\r\n    if (!window.YT) {\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://youtu.be/1QkX7Qetu2Q?si=fJDiZ6d_OnhUTs4o';\r\n      const firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n      \r\n      window.onYouTubeIframeAPIReady = loadYouTubePlayer;\r\n    } else {\r\n      loadYouTubePlayer();\r\n    }\r\n  }, [isPlaying, volume]);\r\n\r\n  const togglePlay = () => {\r\n    setIsPlaying(!isPlaying);\r\n    // This will be handled by the YouTube player events\r\n  };\r\n\r\n  const handleVolumeChange = (e) => {\r\n    const newVolume = parseFloat(e.target.value);\r\n    setVolume(newVolume);\r\n    // Volume change will be handled by the YouTube player\r\n  };\r\n\r\n  return (\r\n    <div className=\"background-music\">\r\n      {/* Hidden YouTube player */}\r\n      <div id=\"youtube-player\" style={{ display: 'none' }}></div>\r\n      \r\n      {/* Music controls */}\r\n      <motion.div \r\n        className=\"music-controls\"\r\n        initial={{ opacity: 0, x: 50 }}\r\n        animate={{ opacity: 1, x: 0 }}\r\n        transition={{ duration: 0.5, delay: 3 }}\r\n      >\r\n        <motion.button\r\n          className={`music-toggle ${isPlaying ? 'playing' : ''}`}\r\n          onClick={togglePlay}\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n        >\r\n          {isPlaying ? 'ðŸŽµ' : 'ðŸ”‡'}\r\n        </motion.button>\r\n        \r\n        <div className=\"volume-control\">\r\n          <span className=\"volume-icon\">ðŸ”Š</span>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.1\"\r\n            value={volume}\r\n            onChange={handleVolumeChange}\r\n            className=\"volume-slider\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"music-info\">\r\n          <span className=\"music-title\">I LOVE NOT A CHATAHI ð–¹­</span>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackgroundMusic; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}